drop rule if exists users_del on users;
drop rule if exists roles_del on roles;

drop view if exists users_facade;

drop table if exists user_roles;
drop table if exists users;
drop table if exists roles;

create table users
(
    id          int primary key generated by default as identity (start with 100000),
    username    varchar unique not null,
    password    bytea          not null,

    -- metadata
    insert_date timestamp default now(),
    delete_date timestamp
);

create rule users_del as on delete to users do instead
    update users
    set delete_date = now()
    where id = old.id
    returning *;

create table roles
(
    id          int primary key generated by default as identity,
    title       varchar unique,

    -- metadata
    insert_date timestamp default now(),
    delete_date timestamp
);

create rule roles_del as on delete to roles do instead
    update roles
    set delete_date = now()
    where id = old.id
    returning *;

create table user_roles
(
    id          int generated by default as identity,
    user_id     int references users (id),
    role_id     int references roles (id),

    -- metadata
    insert_date timestamp default now(),

    -- options
    primary key (user_id, role_id)
);

create view users_facade as
select a.id, a.username, a.password, array_agg(r.title) roles, a.insert_date
from users a
         left join user_roles ur on a.id = ur.user_id
         left join roles r on ur.role_id = r.id
where a.delete_date is null
  and r.delete_date is null
group by a.id;